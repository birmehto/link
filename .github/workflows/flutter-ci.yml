name: Flutter CI/CD

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.16.0'
  DART_VERSION: '3.0.0'
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  test_and_analyze:
    name: Test and Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-v${{ env.FLUTTER_VERSION }}-${{ runner.os }}
          cache-path: ${{ github.workspace }}/.pub-cache

      - name: Get Dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Check Formatting
        run: flutter format --set-exit-if-changed .

      - name: Analyze Code
        run: flutter analyze --fatal-infos --fatal-warnings

      - name: Run Tests with Coverage
        run: |
          flutter test --coverage
          # Install lcov if not already installed
          sudo apt-get update && sudo apt-get install -y lcov
          # Generate coverage report
          genhtml coverage/lcov.info -o coverage/html
          # Upload to codecov if token is available
          if [ -n "$CODECOV_TOKEN" ]; then
            bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
          fi

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/html/
          retention-days: 7

  build:
    name: Build
    needs: test_and_analyze
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            build-target: linux
          - os: macos-latest
            build-target: macos
          - os: windows-latest
            build-target: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Get Dependencies
        run: flutter pub get

      - name: Build ${{ matrix.build-target }}
        run: |
          if [ "${{ matrix.build-target }}" = "web" ]; then
            flutter build web --release --web-renderer html
          else
            flutter build ${{ matrix.build-target }} --release
          fi

      - name: Upload Build Artifacts
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build-target }}-build
          path: |
            build/${{ matrix.build-target }}
            build/app/outputs/
          retention-days: 7

  deploy_web:
    name: Deploy Web
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Web Build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: build/web

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/web
          branch: gh-pages
          clean: true
          clean-exclude: |
            CNAME
            .nojekyll

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test_and_analyze, build]
    runs-on: ubuntu-latest

    steps:
      - name: Get the release version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## What's Changed
            
            *Your release notes here*
            
            ### üöÄ New Features
            - 
            ### üêõ Bug Fixes
            - 
            ### üì¶ Dependencies
            - 
            ### üìö Documentation
            - 
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/web/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
